//
//           DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
//                   Version 2, December 2004
//
// Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>
//
// Software :
// Copyright (C) 2014 Massimo Gengarelli <massimo.gengarelli@gmail.com>
//
// Everyone is permitted to copy and distribute verbatim or modified
// copies of this license document, and changing it is allowed as long
// as the name is changed.
//
//            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
//   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
//
//  0. You just DO WHAT THE FUCK YOU WANT TO.
//


#include <core/config.h>
#include <assert.h>
#include <iostream>
#include <stdio.h>
#include <sstream>
#include <list>
#include <algorithm>

int main()
{
  todo::config l_config("@abs_top_builddir@/resources/lalirc");
  assert(l_config.parse_config() == true);

  assert(l_config[FILE_NOTES_DB] == "./notes.bin");

  assert(l_config[NOTE_ID_FORMAT] == "0x%04X");
  assert(l_config[NOTE_COUNT_COLOR] == "red");
  assert(l_config[NOTE_ID_COLOR] == "gray");
  assert(l_config[NOTE_TITLE_COLOR] == "cyan");
  assert(l_config[NOTE_BODY_COLOR] == "green");
  assert(l_config[NOTE_SEARCH_COLOR] == "red");

  assert(l_config[PRIORITY_LOW_COLOR] == "black");
  assert(l_config[PRIORITY_DEFAULT_COLOR] == "white");
  assert(l_config[PRIORITY_HIGH_COLOR] == "blue");

  assert(l_config[PRIORITY_LOW_TEXT] == "doesn't matter");
  assert(l_config[PRIORITY_DEFAULT_TEXT] == "look at it");
  assert(l_config[PRIORITY_HIGH_TEXT] == "do it now!");

  assert(l_config[LIST_FORMAT] == "[@ID@] @TITLE@ @IF_BODY@: @BODY@ :@END_IF_BODY@ @PRIORITY_TEXT@");
  assert(l_config[TEMPLATES_DIRECTORY] == "@prefix@/share/lali/templates/");
  assert(l_config[RESOURCES_DIRECTORY] == "@prefix@/share/lali/resources/");

  assert(l_config.isAskForConfirmation() == true);
  assert(l_config.isMonochrome() == true);
  assert(l_config.isCounterPrintable() == false);
  assert(l_config.getServerPort() == 3030);

  std::list<std::string> l_servlets = l_config.getListOfServlets();
  assert(l_servlets.size() == 5);
  assert(std::find(l_servlets.begin(), l_servlets.end(), "private") != l_servlets.end());

  return 0;
}

